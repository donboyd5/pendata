---
format:
  html:
    toc: true
    toc-depth: 4
    page-layout: full
    css: wider.css
---

# Amortization bases

```{r}
#| label: setup

GROOT <- rprojroot::find_root(rprojroot::has_file(".git/index"))
source(fs::path(GROOT, "data-raw", "R", "setup.R"))

rawdata <- readRDS(fs::path(DIRS$work, "frs_inputs_raw.rds"))
names(rawdata)

```

```{r}
#| label: get-data

sheet <- "amortization_bases"
info <- rawdata[[sheet]]$info
data <- rawdata[[sheet]]$data

```


```{r}
#| label: explore-data

info # are there any notes of interest?
data

```

## Clean the data

-       Convert dates to date class
-       Convert amortization values to numeric
-       Examine plausibility


```{r}
#| label: clean-data

count(data, class) # note that drop is one of the classes
count(data, date)
count(data, amo_period)

data |> filter(is.na(class))
data |> filter(amo_period == "n/a")

amo1 <- data |>
  filter(!is.na(class)) |>
  mutate(
    date2 = lubridate::mdy(date),
    amo_period2 = as.integer(amo_period),
    amo_balance2 = as.numeric(amo_balance)
  )

# inspect values
skimr::skim(amo1) # only amo_period2 has missing values - the n/a values from before

amo2 <- amo1 |>
  select(
    class,
    date = date2,
    amo_period = amo_period2,
    amo_balance = amo_balance2
  ) |>
  arrange(class, date)
skimr::skim(amo2)

```


## Save cleaned amortization bases data to working folder

```{r}
#| label: clean-and-save

saveRDS(amo2, fs::path(DIRS$work, "amortization_bases.rds"))

```